- content_for :dark_strip do
  .strip__dark-regular
    h1 Preferences

- content_for :light_strip do
  p.js-preferences_overview

- content_for :sidebar do
  = render 'partials/sidebar'

.profile
  h2 Your details

  = form_for @current_user, url: preferences_path, html: {class: "js-profile"}, method: :patch do |f|

    h3 Profile picture

    .profileAvatar
      .profileAvatar__avatar.js-profile-avatar
        = render 'user/avatar', user: @current_user

    .profileFace.view-edit
      h3 Select features
      - AvatarHelper.avatar_faces.each do |avatar_face|
        .profileFace__option
          label
            input type="radio" name="user[avatar_face]" value=avatar_face checked=(@current_user.avatar_face == avatar_face)
            .avatar.js-profile-face data-face=avatar_face
            .avatar__outline

    - unless @current_user.can?(:special_avatar)
      .profileColour.view-edit
        h3 Select colour

        - AvatarHelper.avatar_colours.each do |avatar_colour|
          .profileColour__option
            label
              input type="radio" name="user[avatar_colour]" value=avatar_colour checked=(@current_user.avatar_colour == avatar_colour)
              .avatar.js-profile-colour data-colour=avatar_colour
              .avatar__outline

    .btn__profile-edit.js-profile-edit.view-default Edit
    button.view-edit Save
    .btn__profile-cancel.js-profile-edit.view-edit Cancel

  = form_tag preferences_path, class: "js-profile", method: :patch do |f|

    h3
      | Username
      span.alert *

    p.view-default = @current_user.name

    input.input__textfield.view-edit name="name" value=@current_user.name

    .btn__profile-edit.js-profile-edit.view-default Edit
    button.view-edit Save
    .btn__profile-cancel.js-profile-edit.view-edit Cancel

    .message-required.view-edit
      | Required fields (
      span.alert *
      | )


  = form_tag update_password_path, class: "js-profile", method: :patch do |f|

    h3.view-default
      | Password
      span.alert *
    p.view-default = "••••••••••••"

    h3.view-edit
      | Current password
      span.alert *
    input.input__textfield.view-edit type="password" name="current_password"

    h4.view-edit
      | New password
      span.alert *
    input.input__textfield.view-edit type="password" name="password"

    h4.view-edit
      | Confirm new password
      span.alert *
    input.input__textfield.view-edit type="password" name="password_confirmation"

    .btn__profile-edit.js-profile-edit.view-default Edit
    button.view-edit Save
    .btn__profile-cancel.js-profile-edit.view-edit Cancel

    .message-required.view-edit
      | Required fields (
      span.alert *
      | )


  = form_tag preferences_path, class: "js-profile", method: :patch do |f|

    h3 Email (optional)
    p
      | Please note, your email address will not be visible to anyone else, and will only be used to recover a lost password or if email notification has been turned on.

    - display_email = (!@current_user.email || @current_user.email.empty?) ? "Not provided" : @current_user.email
    p.view-default = display_email

    input.input__textfield.view-edit name="user[email]" placeholder="Enter email address" value=@current_user.email

    .btn__profile-edit.js-profile-edit.view-default Edit
    button.view-edit Save
    .btn__profile-cancel.js-profile-edit.view-edit Cancel

- content_for :notification_section do
  .notificationOption
    .constrained
      .notificationOption-content
        h2 Notifications

        // TODO Placeholder text. Please remove this once Notification's are ready.
        p.desc Coming soon...

        // TODO Notifications not ready yet. Please uncomment the below once it's ready.

        / p.desc.js-preferences_notification

        / = image_tag("notification-sample-#{@site.name}.png", alt:'Notification display example', class:'img__sample')
        / p.sample Notifications may look a little like the example above

        / hr

        / = form_for @current_user, url: preferences_path, method: :patch do |f|

        /   .label
        /     .label__title = "Email notifications"
        /     .label__desc Edit your email address above
        /     label.toggle
        /       = f.check_box :email_opted_in
        /       .toggle__text Off
        /       .toggle__text On

        /   - display_email = (!@current_user.email || @current_user.email.empty?) ? "Email not provided" : @current_user.email
        /   p.display = display_email

        /   .label
        /     .label__title = "SMS notifications"
        /     .label__desc Please save your mobile number to receive notifications
        /     label.toggle
        /       = f.check_box :sms_opted_in
        /       .toggle__text Off
        /       .toggle__text On

        /   = f.text_field :sms_contact, placeholder:"Mobile not provided", class:"input__textfield"

        /   .label
        /     .label__title = "Twitter direct messages"
        /     .label__desc = "In order to receive notifications via Twitter DM, you must first follow #{@site.name}'s Twitter account using the button below, then enter and save your own Twitter account name."
        /     label.toggle
        /       = f.check_box :twitter_opted_in
        /       .toggle__text Off
        /       .toggle__text On

        /   a class="twitter-follow-button" href="https://twitter.com/#{@site.name}_community" data-show-count="false" data-size="large" = "Follow @#{@site.name}_community"

        /   = f.text_field :twitter_contact, placeholder:"Twitter not provided", class:"input__textfield"

        /   button Save notifications
