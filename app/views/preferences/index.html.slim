- content_for :dark_strip do
  .strip__dark-regular
    h1 Preferences

- content_for :light_strip do
  p
    | DALE Forums meetings twice a month in Sydney, and after nearly thirty years of supporting men in various stages of coming out, its activities are now going up a notch with ads for the group appearing on many popular male-to-male dating websites and apps like Grindr, Manhunt and Gaydar.

- content_for :sidebar do
  = render 'partials/sidebar'

.profile
  h2 Your details

  = form_for @current_user, url: preferences_path, html: {class: "js-profile"}, method: :patch do |f|

    h3 Profile picture

    .profileAvatar
      .profileAvatar__avatar.js-profile-avatar
        = render 'user/avatar', user: @current_user

    .profileFace.view-edit
      h3 Select features
      - AvatarHelper.avatar_faces.each do |avatar_face|
        .profileFace__option
          label
            input type="radio" name="user[avatar_face]" value=avatar_face checked=(@current_user.avatar_face == avatar_face)
            .avatar.js-profile-face data-face=avatar_face
            .avatar__outline

    - unless @current_user.can?(:special_avatar)
      .profileColour.view-edit
        h3 Select colour

        - AvatarHelper.avatar_colours.each do |avatar_colour|
          .profileColour__option
            label
              input type="radio" name="user[avatar_colour]" value=avatar_colour checked=(@current_user.avatar_colour == avatar_colour)
              .avatar.js-profile-colour data-colour=avatar_colour
              .avatar__outline

    .btn__profile-edit.js-profile-edit.view-default Edit
    button.view-edit Save
    .btn__profile-cancel.js-profile-edit.view-edit Cancel

  = form_tag preferences_path, class: "js-profile", method: :patch do |f|

    h3
      | Username
      span.alert *

    p.view-default = @current_user.name

    input.input__textfield.view-edit name="name" value=@current_user.name

    .btn__profile-edit.js-profile-edit.view-default Edit
    button.view-edit Save
    .btn__profile-cancel.js-profile-edit.view-edit Cancel

    .message-required.view-edit
      | Required fields (
      span.alert *
      | )


  = form_tag update_password_path, class: "js-profile", method: :patch do |f|

    h3.view-default
      | Password
      span.alert *
    p.view-default = "••••••••••••"

    h3.view-edit
      | Current password
      span.alert *
    input.input__textfield.view-edit type="password" name="current_password"

    h4.view-edit
      | New password
      span.alert *
    input.input__textfield.view-edit type="password" name="password"

    h4.view-edit
      | Confirm new password
      span.alert *
    input.input__textfield.view-edit type="password" name="password_confirmation"

    .btn__profile-edit.js-profile-edit.view-default Edit
    button.view-edit Save
    .btn__profile-cancel.js-profile-edit.view-edit Cancel

    .message-required.view-edit
      | Required fields (
      span.alert *
      | )


  = form_tag preferences_path, class: "js-profile", method: :patch do |f|

    h3 Email (optional)
    p
      | Please note, your email address will not be visible to anyone else, and will only be used to recover a lost password.

    p.view-default = @current_user.email || "Not provided"

    input.input__textfield.view-edit name="user[email]" placeholder="Enter email address" value=@current_user.email

    .btn__profile-edit.js-profile-edit.view-default Edit
    button.view-edit Save
    .btn__profile-cancel.js-profile-edit.view-edit Cancel

- content_for :notification_section do
  .notificationOption
    .constrained
      .notificationOption-content
        h2 Notifications
        // TODO Need actual text here
        p Pete Notifications are discreet and impersonal messages that are sent to your nominated accounts. These messages will notify you of upcoming chats sessions you have registered for, as well important articles it acestemquae pa plit exercil inciendio. Ut aut dolent optati comnia nobit hictat quias repro dolest, nam aspersp elignis etusto quam labo.

        = image_tag("notification-sample.png", alt:'Notification display example', class:'img__sample')
        p.sample Notifications may look a little like the example above

        hr

        // TODO JB Allow users to switch on/choose notifications
        .modalContent
          .label.med
            .label__title = "Switch on notifications from #{@site.name}"
            label.toggle
              = check_box_tag 'accept_notifications'
              .toggle__text Off
              .toggle__text On

          .label
            label.checkbox
              = check_box_tag 'sms', class:"input__checkbox"
              .form__checkbox
            .checkbox__text
              strong SMS 
              ' (only available in Australia)

            label.checkbox
              = check_box_tag 'email', class:"input__checkbox"
              .form__checkbox
            .checkbox__text
              strong Email

            label.checkbox
              = check_box_tag 'twitter', class:"input__checkbox"
              .form__checkbox
            .checkbox__text
              strong Twitter 
              ' (direct messages only)
